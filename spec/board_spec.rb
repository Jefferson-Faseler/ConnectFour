require_relative "../board"

describe Board do
  let(:board) { Board.new }

  it "starts as 6 X 7 board of empty values" do
    expect(board.board).to eq([
        ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
        ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
        ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
        ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
        ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
        ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«']
        ])
  end

  describe "placing on the board" do
    it "changes the bottom-most value of column" do
      board.place('ðŸ”´', 3)
      expect(board.board).to eq([
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'ðŸ”´', 'âš«', 'âš«', 'âš«', 'âš«']
          ])
    end

    it "does not change a slot already occupied" do
      board.place('ðŸ”´', 3)
      board.place('âšª', 3)
      expect(board.board).to eq([
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âšª', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'ðŸ”´', 'âš«', 'âš«', 'âš«', 'âš«']
          ])
    end
  end
end

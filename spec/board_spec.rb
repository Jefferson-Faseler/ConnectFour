require_relative "../board"

describe Board do
  let(:board) { Board.new }

  it "starts as 6 X 7 board of empty values" do
    expect(board.display).to eq([
        ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
        ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
        ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
        ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
        ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
        ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«']
        ])
  end

  describe "placing on the board" do
    it "changes the bottom-most value of column" do
      board.place('ðŸ”´', 3)
      expect(board.display).to eq([
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'ðŸ”´', 'âš«', 'âš«', 'âš«', 'âš«']
          ])
    end

    it "does not change a slot already occupied" do
      board.place('ðŸ”´', 3)
      board.place('âšª', 3)
      expect(board.display).to eq([
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'âšª', 'âš«', 'âš«', 'âš«', 'âš«'],
          ['âš«', 'âš«', 'ðŸ”´', 'âš«', 'âš«', 'âš«', 'âš«']
          ])
    end
  end

  describe "diagonally transposes display" do

    before(:each) do
      7.times do |i|
        x = i + 1
        board.place('ðŸ”´', x)
        board.place('âšª', x)
      end


      # ["âš«", "âš«", "âš«", "âš«", "âš«", "âš«", "âš«"]
      # ["âš«", "âš«", "âš«", "âš«", "âš«", "âš«", "âš«"]
      # ["âš«", "âš«", "âš«", "âš«", "âš«", "âš«", "âš«"]
      # ["âš«", "âš«", "âš«", "âš«", "âš«", "âš«", "âš«"]
      # ["âšª", "âšª", "âšª", "âšª", "âšª", "âšª", "âšª"]
      # ["ðŸ”´", "ðŸ”´", "ðŸ”´", "ðŸ”´", "ðŸ”´", "ðŸ”´", "ðŸ”´"]
    end

    it "right diagonal transpose" do
      expect(board.right_diagonal_transpose).to eq ([
                                ["âš«"],
                            ["âš«", "âš«"],
                        ["âš«", "âš«", "âš«"],
                    ["âš«", "âš«", "âš«", "âš«"],
                ["âš«", "âš«", "âš«", "âš«", "âšª"],
            ["âš«", "âš«", "âš«", "âš«", "âšª", "ðŸ”´"],
        ["âš«", "âš«", "âš«", "âš«", "âšª", "ðŸ”´"],
          ["âš«", "âš«", "âš«", "âšª", "ðŸ”´"],
            ["âš«", "âš«", "âšª", "ðŸ”´"],
              ["âš«", "âšª", "ðŸ”´"],
                ["âšª", "ðŸ”´"],
                  ["ðŸ”´"]
        ])
    end

    it "left diagonal transpose" do
      expect(board.left_diagonal_transpose).to eq ([
                      ["ðŸ”´"],
                    ["âšª", "ðŸ”´"],
                  ["âš«", "âšª", "ðŸ”´"],
                ["âš«", "âš«", "âšª", "ðŸ”´"],
              ["âš«", "âš«", "âš«", "âšª", "ðŸ”´"],
            ["âš«", "âš«", "âš«", "âš«", "âšª", "ðŸ”´"],
                ["âš«", "âš«", "âš«", "âš«", "âšª", "ðŸ”´"],
                    ["âš«", "âš«", "âš«", "âš«", "âšª"],
                        ["âš«", "âš«", "âš«", "âš«"],
                            ["âš«", "âš«", "âš«"],
                                ["âš«", "âš«"],
                                    ["âš«"]
        ])
    end

  end
end
